	Этапы тестирования работы устройства:
-----------------------------------------------------------------------------------------------------
		1. Подготовка данных.
		2. Тестирование.
		3. Обработка полученных данных.

	Подготовка данных:
-----------------------------------------------------------------------------------------------------
	Необходимо подготовить текстовый файл с фходными данными.
	Форрмаи и расположение данных в файле:
		* - Формат Fix Point , Q DWL-1

		* - Данные записывают в HEX BIG_ENDIAN

		* - В одной строке расположена реальная и мнимая составляющая(Так как 
		    модуль FFT принимает одновременно реальную и мнимую составляющую)

		* - Каждая строка новая пара данных


		ПРИМЕР:
		DWL -  Data Word Langth =  16
		FORMAt -  Q15

		REAL	IMG 	|IN_FILE
		----------------+-------
		0000	0000	|00000000
		0123	4567	|01234567
		89AB	CDEF	|89ABCDEF


		В написанном MATLAB файле tb_fft.m , при выполнении функции top_fft, промежутчный 
	файл со входными занчениями сгенерируется автоматичски. Переместить их в основной файл
	data.txt, который по умолчанию используется для тестирования hdl модели, можно запуском 
	части кода "Extract Data" расположеной ниже в файле.


	Тестирование:
-----------------------------------------------------------------------------------------------------

	Запуск MATLAB модели
	--------------------
		Для модели MATLAB данным можно сгенерировать в самом скрипте(наборы синусоид в) или
	подать на вход функции уже загруженные в MATLAB данные в виде вектора столбца.

		После чего выбираем тип модели, плавающая точка или фиксированная, со здвигом или без.
	Запускаем соответсвующую часть кода. Даные поступившие в модель можно переместить в отдельный фалй 
	для HDL модели как было описано выше.
		


	Запуск HDL модели
	------------------
	В тестовом HDL (tb_iter_fft.v) файле указать следующие параметры :

		* - Длинну входного слова (DWL)

		* - Формат преобразования 2^AWL(нужно указать AWL)

		* - Нужно ли записывать данные в бит реверсном формате (если данные поступают 
		    в прямом виде, то нужно указать BIT_REVERS_WRITE = 1) 

		* - Выбрать количество циклов таковогогенератора за которое будет выполняться 
		    операция Бабочка.

		* - Указать тип преобразования Прямое(INVERSE = 0) или Обратное(INVERSE = 1).

		* - Указать файл с исходными данными (INIT_FILE)

		* - В параметрах "DEBUG_RES_R_FILE_NAME" и "DEBUG_RES_I_FILE_NAME" вписать 
		    путь и название файлов с результатами, реальной и мнимой части.

		* - Указать тактовый сигнал работы модуля FFT (CLK_1_PER). 

		* - Указать тактовый сигнал поступления данных (CLK_2_PER).


	Данные из INIT_FILE будут поступать на блок FFT через буферное FIFO.
	Результат будет записан спустя 100 ns после negedge/falling_edge сигнала VALID.

	!!! После повторного появления VALID данные в файлах результата перезапишутся!!!


	Обработка полученных данных:
-----------------------------------------------------------------------------------------------------
		В написанном MATLAB скрипте присутсвует возможность сравнения даннх встроенной функции 
	MATLAB "fft", итерационной функции написанной для проверки HDL модели и результатами HDL модели 
	записанными в файл.

		После записи дынных HDL модели в файлы результата необходимо файлы подгрузить в MATLAB,
	для этого Запускаем отдельный раздел файла "Load Data".
		Для сравнения встроенной функции MATLAB "fft" с написанными итеративными есть раздел "stem grafs",
	там можно получить реальную и мнимую частии полученных результата работы встроенной функции и итеративной функции,
	так же модуль ошибки на каждом отсчете относительно встроенной функци.
		Раздел "amplitude and phase spectrum" построит амлитудныф и фазовый спект из полученных данных,
	а также амплитуду ошибки относительно встроенной функции.
		Раздел "stem HDL", позволяет получить те же графики, что и в разделе "stem grafs", но для HDL модели. 
		Раздел "amplitude and phase spectrum HDL". позволяет получить те же графики, что и в разделе 
	"amplitude and phase spectrum", но для HDL модели. 
	
	








